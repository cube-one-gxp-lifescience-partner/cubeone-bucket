{
    "version": "1.0.0",
    "description": "lockzz - Portable application from cube one",
    "homepage": "https://git.cubeone.de/marvin.fenssel/auto-updater",
    "license": "Proprietary",
    "url": "https://httpbin.org/robots.txt",
    "hash": "skip",
    "extract_dir": "lockzz",
    "bin": "lockzz.exe",
    "shortcuts": [
        [
            "lockzz.exe",
            "lockzz"
        ]
    ],
    "pre_install": [
        "# Lösche die Dummy-Datei",
        "Remove-Item \"$dir\\robots.txt\" -ErrorAction SilentlyContinue",
        "",
        "# Prüfe GitLab PAT",
        "if (-not $env:GITLAB_PAT) {",
        "    throw 'GITLAB_PAT environment variable not set'",
        "}",
        "",
        "Write-Host 'Downloading lockzz from cube one GitLab API...' -ForegroundColor Blue",
        "",
        "# GitLab API Headers",
        "$headers = @{",
        "    'Authorization' = \"Bearer $env:GITLAB_PAT\"",
        "    'User-Agent' = 'cube-one-auto-updater/1.0'",
        "}",
        "",
        "# GitLab API URL",
        "$apiUrl = 'https://git.cubeone.de/api/v4/projects/marvin.fenssel%2Fauto-updater/repository/files/additional_software%2Flockzz.zip/raw?ref=main'",
        "$downloadPath = \"$cachedir\\lockzz.zip\"",
        "",
        "try {",
        "    # Verwende -OutFile für Binärdateien",
        "    Invoke-WebRequest -Uri $apiUrl -Headers $headers -OutFile $downloadPath -TimeoutSec 30",
        "    ",
        "    # Prüfe die heruntergeladene Datei",
        "    if (Test-Path $downloadPath) {",
        "        $fileInfo = Get-Item $downloadPath",
        "        Write-Host \"✅ Datei erfolgreich heruntergeladen!\" -ForegroundColor Green",
        "        Write-Host \"Dateigröße: $($fileInfo.Length) bytes ($([Math]::Round($fileInfo.Length/1024, 2)) KB)\" -ForegroundColor Blue",
        "        ",
        "        # Prüfe ob es eine gültige ZIP-Datei ist",
        "        try {",
        "            $bytes = [System.IO.File]::ReadAllBytes($downloadPath)",
        "            if ($bytes.Length -gt 4 -and $bytes[0] -eq 0x50 -and $bytes[1] -eq 0x4B) {",
        "                Write-Host \"✅ Gültige ZIP-Datei erkannt!\" -ForegroundColor Green",
        "            } else {",
        "                throw 'Downloaded file is not a valid ZIP archive'",
        "            }",
        "        } catch {",
        "            throw \"ZIP validation failed: $($_.Exception.Message)\"",
        "        }",
        "    } else {",
        "        throw 'Downloaded file not found'",
        "    }",
        "} catch {",
        "    throw \"Failed to download from GitLab API: $($_.Exception.Message)\"",
        "}",
        "",
        "# Extrahiere ZIP-Datei",
        "Write-Host 'Extracting lockzz...' -ForegroundColor Blue",
        "try {",
        "    Expand-Archive -Path $downloadPath -DestinationPath $dir -Force",
        "    Write-Host '✅ Extraction successful' -ForegroundColor Green",
        "} catch {",
        "    throw \"Failed to extract ZIP: $($_.Exception.Message)\"",
        "}",
        "",
        "# Bereinige Download",
        "Remove-Item $downloadPath -ErrorAction SilentlyContinue"
    ],
    "post_install": [
        "# Prüfe Installation",
        "if (Test-Path \"$dir\\lockzz.exe\") {",
        "    Write-Host '✅ lockzz.exe found and ready to use' -ForegroundColor Green",
        "    $fileInfo = Get-Item \"$dir\\lockzz.exe\"",
        "    Write-Host \"Executable size: $($fileInfo.Length) bytes\" -ForegroundColor Blue",
        "    Write-Host 'Run \"lockzz\" from command line to start the application.' -ForegroundColor Yellow",
        "} else {",
        "    Write-Host '⚠️ lockzz.exe not found, checking directory contents:' -ForegroundColor Yellow",
        "    Get-ChildItem \"$dir\" -Recurse | ForEach-Object {",
        "        Write-Host \"  - $($_.FullName.Replace($dir, '').TrimStart('\\\\'))\" -ForegroundColor Gray",
        "    }",
        "}",
        "",
        "Write-Host 'lockzz installed successfully from cube one GitLab!' -ForegroundColor Green",
        "Write-Host 'Source: https://git.cubeone.de/marvin.fenssel/auto-updater' -ForegroundColor Blue"
    ],
    "notes": [
        "Portable application from cube one GmbH",
        "Downloaded from private GitLab repository via API",
        "Requires GITLAB_PAT environment variable for authentication",
        "Uses GitLab API for reliable binary file downloads",
        "Authentication handled automatically by cube one auto-updater"
    ]
}
