{
    "version": "1.0.0",
    "description": "lockzz - Portable application from cube one",
    "homepage": "https://git.cubeone.de/marvin.fenssel/auto-updater",
    "license": "Proprietary",
    "url": "https://httpbin.org/robots.txt",
    "extract_dir": "lockzz",
    "bin": "lockzz.exe",
    "shortcuts": [
        [
            "lockzz.exe",
            "lockzz"
        ]
    ],
    "pre_install": [
        "# Lösche die Dummy-Datei",
        "Remove-Item \"$dir\\robots.txt\" -ErrorAction SilentlyContinue",
        "",
        "# Prüfe GitLab PAT",
        "if (-not $env:GITLAB_PAT) {",
        "    throw 'GITLAB_PAT environment variable not set'",
        "}",
        "",
        "Write-Host 'Downloading lockzz from cube one GitLab...' -ForegroundColor Blue",
        "",
        "# GitLab Download",
        "$gitlabUrl = 'https://git.cubeone.de/marvin.fenssel/auto-updater/-/raw/main/additional_software/lockzz.zip?private_token=' + $env:GITLAB_PAT",
        "$downloadPath = \"$cachedir\\lockzz.zip\"",
        "",
        "try {",
        "    Invoke-WebRequest -Uri $gitlabUrl -OutFile $downloadPath -TimeoutSec 30",
        "    Write-Host '✅ Download successful' -ForegroundColor Green",
        "} catch {",
        "    throw \"Failed to download from GitLab: $($_.Exception.Message)\"",
        "}",
        "",
        "# Prüfe Download",
        "if (-not (Test-Path $downloadPath)) {",
        "    throw 'Downloaded file not found'",
        "}",
        "",
        "$fileInfo = Get-Item $downloadPath",
        "Write-Host \"Downloaded file size: $($fileInfo.Length) bytes\" -ForegroundColor Blue",
        "",
        "# Validiere ZIP-Datei",
        "$bytes = [System.IO.File]::ReadAllBytes($downloadPath)",
        "if ($bytes.Length -lt 4 -or $bytes[0] -ne 0x50 -or $bytes[1] -ne 0x4B) {",
        "    throw 'Downloaded file is not a valid ZIP archive'",
        "}",
        "",
        "# Extrahiere ZIP-Datei",
        "Write-Host 'Extracting lockzz...' -ForegroundColor Blue",
        "try {",
        "    Expand-Archive -Path $downloadPath -DestinationPath $dir -Force",
        "    Write-Host '✅ Extraction successful' -ForegroundColor Green",
        "} catch {",
        "    throw \"Failed to extract ZIP: $($_.Exception.Message)\"",
        "}",
        "",
        "# Bereinige Download",
        "Remove-Item $downloadPath -ErrorAction SilentlyContinue"
    ],
    "post_install": [
        "# Prüfe Installation",
        "if (Test-Path \"$dir\\lockzz.exe\") {",
        "    Write-Host '✅ lockzz.exe found and ready to use' -ForegroundColor Green",
        "    $fileInfo = Get-Item \"$dir\\lockzz.exe\"",
        "    Write-Host \"Executable size: $($fileInfo.Length) bytes\" -ForegroundColor Blue",
        "} else {",
        "    Write-Host '⚠️ lockzz.exe not found, checking directory contents:' -ForegroundColor Yellow",
        "    Get-ChildItem \"$dir\" -Recurse | ForEach-Object {",
        "        Write-Host \"  - $($_.FullName.Replace($dir, '').TrimStart('\\\\'))\" -ForegroundColor Gray",
        "    }",
        "}",
        "",
        "Write-Host 'lockzz installed successfully from cube one GitLab!' -ForegroundColor Green",
        "Write-Host 'Run \"lockzz\" from command line to start the application.' -ForegroundColor Yellow"
    ],
    "notes": [
        "Portable application from cube one GmbH",
        "Downloaded from private GitLab repository during installation",
        "Requires GITLAB_PAT environment variable for authentication",
        "Dummy URL used for Scoop compatibility - real download happens in pre_install"
    ]
}
