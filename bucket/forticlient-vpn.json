{
    "version": "1.0.0",
    "description": "FortiClient VPN - SSL VPN client for secure remote access",
    "homepage": "https://cloud.cubeone.de",
    "license": "Proprietary",
    "url": "https://httpbin.org/robots.txt",
    "pre_install": [
        "# BITS-Transfer für noch schnellere Downloads",
        "Write-Host 'Using BITS for optimized download...' -ForegroundColor Blue",
        "",
        "# Prüfe BITS-Verfügbarkeit",
        "if (Get-Command Start-BitsTransfer -ErrorAction SilentlyContinue) {",
        "    try {",
        "        # Erstelle temporäre Datei für BITS",
        "        $tempFile = [System.IO.Path]::GetTempFileName()",
        "        $tempFile = $tempFile.Replace('.tmp', '.exe')",
        "        ",
        "        # BITS-Transfer mit Authentication",
        "        $bitsJob = Start-BitsTransfer -Source $webdavUrl -Destination $tempFile -Authentication Basic -Credential (New-Object System.Management.Automation.PSCredential($userId, (ConvertTo-SecureString $env:NEXTCLOUD_APP_PASSWORD -AsPlainText -Force))) -Asynchronous",
        "        ",
        "        # Warte auf Completion mit Progress",
        "        do {",
        "            Start-Sleep -Seconds 2",
        "            $job = Get-BitsTransfer -JobId $bitsJob.JobId",
        "            if ($job.BytesTotal -gt 0) {",
        "                $progress = [Math]::Round(($job.BytesTransferred / $job.BytesTotal) * 100)",
        "                Write-Host \"BITS Progress: $progress% ($([Math]::Round($job.BytesTransferred/1MB, 1)) MB of $([Math]::Round($job.BytesTotal/1MB, 1)) MB)\" -ForegroundColor Cyan",
        "            }",
        "        } while ($job.JobState -eq 'Transferring')",
        "        ",
        "        if ($job.JobState -eq 'Transferred') {",
        "            Complete-BitsTransfer -BitsJob $job",
        "            Move-Item $tempFile $downloadPath",
        "            Write-Host '✅ BITS download completed successfully!' -ForegroundColor Green",
        "        } else {",
        "            Remove-BitsTransfer -BitsJob $job",
        "            throw \"BITS transfer failed: $($job.JobState)\"",
        "        }",
        "    } catch {",
        "        Write-Host 'BITS transfer failed, using fallback method...' -ForegroundColor Yellow",
        "        # Fallback zu normalem Download",
        "    }",
        "} else {",
        "    Write-Host 'BITS not available, using standard download...' -ForegroundColor Yellow",
        "    # Fallback zu normalem Download",
        "}"
    ],
    "installer": {
        "script": [
            "# Prüfe ob die Datei existiert",
            "if (-not (Test-Path \"$dir\\FortiClientVPN.exe\")) {",
            "    throw 'FortiClientVPN.exe not found in download directory'",
            "}",
            "",
            "# Umbenennen zu MSI",
            "Rename-Item -Path \"$dir\\FortiClientVPN.exe\" -NewName \"FortiClientVPN.msi\" -Force",
            "Write-Host 'Installing FortiClient VPN...' -ForegroundColor Green",
            "",
            "$msiPath = \"$dir\\FortiClientVPN.msi\"",
            "Write-Host \"Executing: msiexec /i `\"$msiPath`\" /passive /norestart\" -ForegroundColor Cyan",
            "",
            "# Prüfe ob MSI-Datei existiert",
            "if (-not (Test-Path $msiPath)) {",
            "    throw 'FortiClientVPN.msi not found after rename'",
            "}",
            "",
            "# Starte MSI-Installation",
            "$process = Start-Process -FilePath 'msiexec' -ArgumentList '/i', \"`\"$msiPath`\"\", '/passive', '/norestart' -Wait -PassThru -NoNewWindow",
            "",
            "# Prüfe Exit-Code",
            "switch ($process.ExitCode) {",
            "    0 { Write-Host 'FortiClient VPN installed successfully!' -ForegroundColor Green }",
            "    3010 { Write-Host 'FortiClient VPN installed successfully! (Reboot recommended)' -ForegroundColor Green }",
            "    1641 { Write-Host 'FortiClient VPN installed successfully! (Reboot initiated)' -ForegroundColor Green }",
            "    1618 { Write-Host 'Another installation is in progress. Please wait and try again.' -ForegroundColor Yellow; exit 1618 }",
            "    1633 { Write-Host 'This installation package is not supported by this processor type.' -ForegroundColor Red; exit 1633 }",
            "    default {",
            "        Write-Host \"Installation failed with exit code: $($process.ExitCode)\" -ForegroundColor Red",
            "        Write-Host \"Check Windows Event Log for more details.\" -ForegroundColor Yellow",
            "        exit $process.ExitCode",
            "    }",
            "}"
        ]
    },
    "post_install": [
        "Write-Host 'FortiClient VPN installation completed from cube one Nextcloud!' -ForegroundColor Green",
        "Write-Host 'Source: https://cloud.cubeone.de' -ForegroundColor Blue",
        "Write-Host 'Note: A reboot may be required for full functionality.' -ForegroundColor Yellow",
        "",
        "# Prüfe ob FortiClient installiert wurde",
        "Start-Sleep -Seconds 2",
        "$fortiPath = Get-ItemProperty -Path 'HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*' -ErrorAction SilentlyContinue | Where-Object { $_.DisplayName -like '*FortiClient*' }",
        "if ($fortiPath) {",
        "    Write-Host \"✅ FortiClient VPN found in installed programs: $($fortiPath.DisplayName)\" -ForegroundColor Green",
        "} else {",
        "    Write-Host \"⚠️ FortiClient VPN not found in installed programs (may require reboot)\" -ForegroundColor Yellow",
        "}"
    ],
    "uninstaller": {
        "script": [
            "Write-Host 'Uninstalling FortiClient VPN...' -ForegroundColor Yellow",
            "",
            "# Stoppe FortiClient-Prozesse",
            "Get-Process -Name 'FortiClient*' -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue",
            "",
            "# Suche nach FortiClient in Registry",
            "$uninstallKeys = @(",
            "    'HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*',",
            "    'HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*'",
            ")",
            "",
            "$found = $false",
            "foreach ($key in $uninstallKeys) {",
            "    Get-ItemProperty -Path $key -ErrorAction SilentlyContinue | Where-Object { $_.DisplayName -like '*FortiClient*' } | ForEach-Object {",
            "        $found = $true",
            "        Write-Host \"Uninstalling: $($_.DisplayName)\" -ForegroundColor Cyan",
            "        $productCode = $_.PSChildName",
            "        $process = Start-Process -FilePath 'msiexec' -ArgumentList '/x', $productCode, '/passive', '/norestart' -Wait -PassThru -NoNewWindow",
            "        switch ($process.ExitCode) {",
            "            0 { Write-Host \"Successfully uninstalled: $($_.DisplayName)\" -ForegroundColor Green }",
            "            3010 { Write-Host \"Successfully uninstalled: $($_.DisplayName) (Reboot recommended)\" -ForegroundColor Green }",
            "            1605 { Write-Host \"Product not found (already uninstalled): $($_.DisplayName)\" -ForegroundColor Yellow }",
            "            default { Write-Host \"Uninstall failed with exit code: $($process.ExitCode)\" -ForegroundColor Red }",
            "        }",
            "    }",
            "}",
            "",
            "if (-not $found) {",
            "    Write-Host 'No FortiClient VPN installation found.' -ForegroundColor Yellow",
            "}",
            "",
            "Write-Host 'FortiClient VPN uninstall completed!' -ForegroundColor Green"
        ]
    },
    "notes": [
        "FortiClient VPN from cube one GmbH",
        "Downloaded from private Nextcloud via WebDAV",
        "Requires NEXTCLOUD_APP_PASSWORD environment variable for authentication",
        "Installs as system-wide MSI package with /passive /norestart",
        "File is renamed from .exe to .msi during installation process",
        "Requires administrator privileges for installation"
    ]
}
